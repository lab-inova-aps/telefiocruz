services:
  app: &app
    hostname: app
    env_file:
      - .env
      - .env.local
    ports:
      - "8000:8000"
    build:
      context: src
      dockerfile: Dockerfile
    restart: always
    volumes:
      - ./src:/app
      # - /Users/breno/Documents/Workspace/slth/src/django/slth:/usr/local/lib/python3.13/site-packages/slth
      # - /Users/breno/Documents/Workspace/slth/src/django/lib/slthlib:/usr/local/lib/python3.13/site-packages/slthlib
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    healthcheck:
      test: curl http://127.0.0.1:8000/api/auth/login/
    working_dir: /app
    entrypoint: sh -c "python manage.py sync && gunicorn api.wsgi -b 0.0.0.0:8000 --enable-stdio-inheritance --error-logfile '-' -w 3 --log-level info --reload --timeout 3600"
  
  redis:
    hostname: redis
    env_file:
      - .env
      - .env.local
    image: redis
    restart: always
    ports:
      - "6379"
    command: redis-server --loglevel warning
    volumes:
      - .docker/redis:/data
  
  postgres:
    env_file:
      - .env
      - .env.local
    image: postgres
    hostname: postgres
    ports:
      - "5432"
    volumes:
      - .docker/postgres:/var/lib/postgresql/data
    healthcheck:
      test: psql -U postgres -d $$POSTGRES_DB -c "SELECT version();"
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
